# version: "3.8"

services:
  apache-web-server:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    volumes:
      - ./src/frontend/:/var/www/html/
    ports:
      - "${FRONTEND_PORT}:80"
      - "${FRONTEND_PORT2}:80"
    networks:
      - my-network

  node:
    build:
      context: .
      dockerfile: Dockerfile.backend
    env_file:
      - .env # โหลดค่า environment variables จากไฟล์ .env
    ports:
      - "${BACKEND_PORT}:3000"
    depends_on:
      - mysql
    volumes:
      - ./src/backend/storage:/app/storage
    networks:
      - my-network

  mysql:
    image: mysql:latest
    restart: always
    env_file:
      - .env # โหลดค่าตัวแปรจาก .env
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}" # ใช้ค่าจาก .env
      MYSQL_DATABASE: "${MYSQL_DATABASE}" # ใช้ค่าจาก .env
      MYSQL_USER: "${MYSQL_USER}" # ใช้ค่าจาก .env
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}" # ใช้ค่าจาก .env
    ports:
      - "${MYSQL_HOST_PORT}:${MYSQL_CONTAINER_PORT}" # ใช้ค่าจาก .env
    volumes:
      - db_data:/var/lib/mysql
      - ./easyroom-docker.sql:/docker-entrypoint-initdb.d/easyroom.sql
    networks:
      - my-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    depends_on:
      - mysql
    ports:
      - "${PHPMYADMIN_PORT}:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: "${MYSQL_ROOT_PASSWORD}" # ใช้ค่าจาก .env
    networks:
      - my-network

volumes:
  db_data:
    driver: local

networks:
  my-network:
    driver: bridge
