version: "3.8"

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend # ถ้าคุณมี Dockerfile แยกสำหรับ frontend
    volumes:
      - ./src/frontend/:/var/www/html/
    ports:
      - "8080:80"
      - "5501:80"
    networks:
      - my-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend # Node.js backend Dockerfile
    ports:
      - "3000:3000"
    environment:
      - API_PORT=3000
      - DB_HOST=easyroomhost
      - DB_USER=easyroomteam
      - DB_PASSWORD=1234
      - DB_NAME=easyroom
      - SESSION_SECRET=supersecret
    depends_on:
      - easyroomhost
    volumes:
      - ./src/backend/storage:/app/storage
    networks:
      - my-network

  easyroomhost:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "1234"
      MYSQL_DATABASE: easyroom
      MYSQL_USER: easyroomteam
      MYSQL_PASSWORD: "1234"
    ports:
      - "9906:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./easyroom.sql:/docker-entrypoint-initdb.d/easyroom.sql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - my-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8000:80"
    environment:
      PMA_HOST: easyroomhost
      PMA_USER: root
      PMA_PASSWORD: "1234"
    depends_on:
      - easyroomhost
    networks:
      - my-network

volumes:
  db_data:
    driver: local

networks:
  my-network:
    driver: bridge
