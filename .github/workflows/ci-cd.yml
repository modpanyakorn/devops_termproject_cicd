name: CI/CD Pipeline

on:
  push:
    branches: [main] # หรือ master หรือ branch ที่คุณต้องการ trigger

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Build และ push frontend image
      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.frontend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/easyroom-frontend:latest

      # Build และ push backend image
      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.backend
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/easyroom-backend:latest

      # สร้างไฟล์ .env สำหรับ production
      - name: Create .env file for production
        run: |
          cat > .env.prod << EOL
          # Production environment
          FRONTEND_PORT=80
          BACKEND_PORT=3000
          API_PORT=3000
          API_HOST=0.0.0.0

          DB_HOST=mysql
          DB_PORT=3306
          DB_USER=easyroomteam
          DB_PASSWORD=1234
          DB_NAME=easyroom

          MYSQL_ROOT_PASSWORD=1234
          MYSQL_DATABASE=easyroom
          MYSQL_USER=easyroomteam
          MYSQL_PASSWORD=1234
          MYSQL_CONTAINER_PORT=3306
          MYSQL_HOST_PORT=3306

          DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}
          EOL

      # สร้างไฟล์ docker-compose.prod.yml
      - name: Create docker-compose.prod.yml
        run: |
          cat > docker-compose.prod.yml << EOL
          version: "3.8"

          services:
            apache-web-server:
              image: ${{ secrets.DOCKER_HUB_USERNAME }}/easyroom-frontend:latest
              restart: always
              ports:
                - "80:80"
              networks:
                - my-network

            node:
              image: ${{ secrets.DOCKER_HUB_USERNAME }}/easyroom-backend:latest
              restart: always
              env_file:
                - .env.prod
              ports:
                - "\${BACKEND_PORT}:3000"
              depends_on:
                - mysql
              volumes:
                - backend_storage:/app/storage
              networks:
                - my-network

            mysql:
              image: mysql:latest
              restart: always
              env_file:
                - .env.prod
              environment:
                MYSQL_ROOT_PASSWORD: "\${MYSQL_ROOT_PASSWORD}"
                MYSQL_DATABASE: "\${MYSQL_DATABASE}"
                MYSQL_USER: "\${MYSQL_USER}"
                MYSQL_PASSWORD: "\${MYSQL_PASSWORD}"
              volumes:
                - db_data:/var/lib/mysql
              networks:
                - my-network

            phpmyadmin:
              image: phpmyadmin/phpmyadmin
              depends_on:
                - mysql
              ports:
                - "8000:80"
              environment:
                PMA_HOST: mysql
                PMA_USER: root
                PMA_PASSWORD: "\${MYSQL_ROOT_PASSWORD}"
              networks:
                - my-network

          volumes:
            db_data:
              driver: local
            backend_storage:
              driver: local

          networks:
            my-network:
              driver: bridge
          EOL

      # คัดลอกไฟล์ที่จำเป็นไปยัง EC2
      - name: Copy necessary files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ".env.prod,docker-compose.prod.yml,easyroom.sql"
          target: "~/easyroom-deployment"

      # Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/easyroom-deployment

            # เปลี่ยนชื่อไฟล์ .env
            mv .env.prod .env

            # ดึง images ล่าสุดจาก Docker Hub
            docker-compose -f docker-compose.prod.yml pull

            # รีสตาร์ท containers
            docker-compose -f docker-compose.prod.yml down || true
            docker-compose -f docker-compose.prod.yml up -d

            echo "Deployment complete!"
