function toggleMobileMenu() {
  const menu = document.getElementById("mobilePopupMenu");
  menu.style.display = menu.style.display === "flex" ? "none" : "flex";
}

window.addEventListener("click", function (e) {
  const menu = document.getElementById("mobilePopupMenu");
  const button = document.querySelector(".menu-toggle");
  if (!menu.contains(e.target) && !button.contains(e.target)) {
    menu.style.display = "none";
  }
});

async function fetchUserInfo() {
  try {
    const response = await fetch(`${API_URL}/auth/session`, {
      method: "GET",
      credentials: "include",
    });
    if (!response.ok) {
      throw new Error("Session expired");
    }
    const userSession = await response.json();
    console.log("üîç ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå:", userSession);
    if (!userSession.data) {
      alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà");
      window.location.href = "../../index.html";
      return;
    }
    document.getElementById("student-name").textContent =
      userSession.data.full_name;
    document.getElementById("student-id").textContent =
      userSession.data.user_id;
    if (userSession.role === "‡∏ô‡∏¥‡∏™‡∏¥‡∏ï") {
      document.getElementById("stud-year").textContent =
        userSession.data.study_year || "-";
      document.getElementById("faculty").textContent =
        userSession.data.faculty || "-";
      document.getElementById("department").textContent =
        userSession.data.department || "-";
    } else {
      document.getElementById("stud-year").parentElement.style.display = "none";
      document.getElementById("faculty").textContent =
        userSession.data.faculty || "-";
      document.getElementById("department").textContent =
        userSession.data.department || "-";
    }
  } catch (error) {
    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", error);
    alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà");
    window.location.href = "../../index.html";
  }
}

function convertToThaiTime(utcDate) {
  if (!utcDate) return "-";
  const date = new Date(utcDate);
  date.setHours(date.getHours() + 7);
  return date.toISOString().slice(0, 10);
}

function showRejectNote(requestId, mode = "reject") {
  const bookings = window.loadedBookingData || [];
  const booking = bookings.find((b) => b.room_request_id === requestId);
  if (!booking) {
    alert("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ");
    return;
  }
  let content = "";
  if (mode === "reject") {
    content = `
        <p><strong>üìç‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á : </strong> ${booking.room_name || "-"}</p>
        <p><strong>‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ : </strong> ${
          booking.reject_reason || "-"
        }</p>
        <p><strong>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° : </strong> ${
          booking.detail_reject_reason || "-"
        }</p>
        <hr>
        <p><strong>üë§ ‡∏ú‡∏π‡πâ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ :</strong> ${
          booking.admin_name || booking.executive_name
        }</p>
      `;
  } else if (mode === "approve") {
    content = `
        <p><strong>üìç‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏á : </strong> ${booking.room_name || "-"}</p>
        <p><strong>üë§ ‡∏ú‡∏π‡πâ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ : </strong> ${
          booking.admin_name || booking.executive_name
        }</p>
      `;
  }
  document.getElementById("rejectContent").innerHTML = content;
  document.getElementById("rejectModal").style.display = "block";
  document.getElementById("modalOverlay").style.display = "block";
}

function closeRejectModal() {
  document.getElementById("rejectModal").style.display = "none";
  document.getElementById("modalOverlay").style.display = "none";
}
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏î‡πâ‡∏ß‡∏¢ SweetAlert2
async function cancelBooking(requestId) {
  console.log(`üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á requestId ‡πÑ‡∏õ‡∏ó‡∏µ‡πà API: ${requestId}`);
  const row = document.querySelector(`tr[data-id="${requestId}"]`);
  if (!row) return;
  const statusCell = row.querySelector(".status");
  const statusText = statusCell.textContent.trim();
  if (statusText !== "‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£" && statusText !== "‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥") {
    Swal.fire({
      icon: "error",
      title: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
      text: "‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ '‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£' ‡∏´‡∏£‡∏∑‡∏≠ '‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥' ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô",
    });
    return;
  }
  const result = await Swal.fire({
    title: "‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
    icon: "warning",
    showCancelButton: true,
    confirmButtonText: "‡πÉ‡∏ä‡πà ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
    cancelButtonText: "‡πÑ‡∏°‡πà",
  });
  if (!result.isConfirmed) return;
  try {
    const response = await fetch(
      `${API_URL}/booker/cancelBooking/${requestId}`,
      {
        method: "DELETE",
        headers: { "Content-Type": "application/json" },
      }
    );
    const resultJson = await response.json();
    console.log("‚úÖ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå:", resultJson);
    if (!response.ok) throw new Error(resultJson.error || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ");
    statusCell.textContent = "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á";
    statusCell.style.color = "red";
    row.querySelector("td:last-child").innerHTML = "-";
    if (window.loadedBookingData) {
      const bookingIndex = window.loadedBookingData.findIndex(
        (b) => b.room_request_id === requestId
      );
      if (bookingIndex !== -1) {
        window.loadedBookingData[bookingIndex].request_status = "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á";
      }
    }
    Swal.fire({
      icon: "success",
      title: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
      showConfirmButton: false,
      timer: 1500,
    });
  } catch (error) {
    console.error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ:", error);
    Swal.fire({
      icon: "error",
      title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
      text: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà",
    });
  }
}

async function fetchBrokenEquipments() {
  try {
    console.log("üîç ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API /getBrokenEquipments...");
    const response = await fetch(`${API_URL}/booker/getBrokenEquipments`, {
      method: "GET",
      credentials: "include",
    });
    if (!response.ok) throw new Error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢‡πÑ‡∏î‡πâ");
    const brokenEquipments = await response.json();
    console.log("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å API:", brokenEquipments);
    const tableBody = document.getElementById("repair-table-body");
    if (!tableBody) {
      console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö element #repair-table-body");
      return;
    }
    tableBody.innerHTML = "";
    if (!Array.isArray(brokenEquipments) || brokenEquipments.length === 0) {
      console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á");
      tableBody.innerHTML = `<tr><td colspan="7" style="text-align: center;">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°</td></tr>`;
      return;
    }
    brokenEquipments.forEach((item, index) => {
      console.log(`üìå ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà ${index + 1}:`, item);
      const row = document.createElement("tr");
      row.innerHTML = `
      <td>${new Date(item.repair_date).toLocaleString("th-TH")}</td>
                <td>${item.equipment_name || "-"}</td>
                <td>${item.damage_details || "-"}</td>
                <td>SC2-${item.room_id || "-"}</td>
                <td>${item.Admin_Name}</td>
                <td class="status">${item.repair_status || "-"}</td>
                <td>
                    <button class="detail-btn" onclick="showDetails(${index}, 'repair')">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</button>
                    </td>
            `;
      tableBody.appendChild(row);
    });
    window.brokenEquipmentsData = brokenEquipments;
    console.log("‚úÖ ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!");
    setupReportTable(4, 5);
  } catch (error) {
    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", error);
  }
}

function showDetails(index, type) {
  const modalTitle = document.getElementById("modalTitle");
  const detailsContainer = document.getElementById("detailsContainer");
  if (!modalTitle || !detailsContainer) {
    console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö element #modalTitle ‡∏´‡∏£‡∏∑‡∏≠ #detailsContainer");
    return;
  }
  let detailsContent = "";
  if (type === "repair") {
    const item = window.brokenEquipmentsData[index];
    console.log("üìå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤:", item);
    if (!item) {
      console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö index:", index);
      return;
    }
    let imageUrl = item.image_path
      ? `${API_URL}/booker/image/${item.image_path}`
      : "";
    modalTitle.innerText = "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°";
    detailsContent = `
    ${
      imageUrl
        ? `<div style="text-align: center;">
          <img src="${imageUrl}" alt="‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏™‡πà‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û" style="width: 100%; max-width: 400px; border-radius: 5px; margin-top: 10px; border: 1px solid black; margin-bottom: 15px;">`
        : ""
    }
          <p><strong>üñ• ‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå:</strong> ${item.equipment_name || "-"}</p>
          <p><strong>üîç ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:</strong> ${item.damage || "-"}</p>
          <p><strong>üîç ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:</strong> ${
            item.damage_details || "-"
          }</p>
          <p><strong>üìç ‡∏´‡πâ‡∏≠‡∏á:</strong> SC2-${item.room_id || "-"}</p>
          <p><strong>‚ö†Ô∏è ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> ${item.repair_status || "-"}</p>
          <p><strong>üë§ ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°:</strong> ${
            item.Admin_Name || "‡∏£‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°"
          }</p>
          <p><strong>üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°:</strong> ${new Date(
            item.repair_date
          ).toLocaleString("th-TH")}</p>
          </div>
      `;
    console.log("üìù HTML ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÅ‡∏™‡∏î‡∏á:", detailsContent);
  }
  detailsContainer.innerHTML = detailsContent;
  document.getElementById("modalOverlay").style.display = "block";
  document.getElementById("detailsModal").style.display = "block";
}

function closeDetailsModal() {
  document.getElementById("modalOverlay").style.display = "none";
  document.getElementById("detailsModal").style.display = "none";
  document.getElementById("rejectModal").style.display = "none";
}

function openDetailsModal(index) {
  console.log("üìå ‡πÄ‡∏õ‡∏¥‡∏î Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö index:", index);
  if (!window.brokenEquipmentsData || !window.brokenEquipmentsData[index]) {
    console.error("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö index:", index);
    return;
  }
  const item = window.brokenEquipmentsData[index];
  console.log("üìå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏°‡∏≤:", item);
  const repairDate = new Date(item.Repair_date).toLocaleString("th-TH", {
    year: "numeric",
    month: "2-digit",
    day: "2-digit",
    hour: "2-digit",
    minute: "2-digit",
    second: "2-digit",
  });
  const detailsContainer = document.getElementById("detailsContainer");
  detailsContainer.innerHTML = `
      <div class="details-container">
      <div class="details-row"><strong>‡∏ú‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á:</strong> ${item.Admin_Name}</div>
          <div class="details-row"><strong>‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°:</strong> ${repairDate}</div>
          <div class="details-row"><strong>‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå:</strong> ${item.Equipments_name}</div>
          <div class="details-row"><strong>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:</strong> ${item.Damaged_details}</div>
          <div class="details-row"><strong>‡∏´‡πâ‡∏≠‡∏á:</strong> SC2-${item.Rooms_ID}</div>
          <div class="details-row"><strong>‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°:</strong> ${item.Admin_Name}</div>
          <div class="details-row"><strong>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:</strong> ${item.Repair_status}</div>
          </div>
          `;
  console.log("üìå HTML ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô Modal:", detailsContainer.innerHTML);
  document.getElementById("modalOverlay").style.display = "block";
  document.getElementById("detailsModal").style.display = "block";
}

function formatDate(isoString) {
  if (!isoString) return "-";
  return isoString.split("T")[0];
}

async function fetchUserBookingData() {
  try {
    console.log("üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á...");
    const sessionResponse = await fetch(`${API_URL}/auth/session`, {
      credentials: "include",
    });
    if (!sessionResponse.ok)
      throw new Error("‚ùå ‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà");
    const userSession = await sessionResponse.json();
    console.log("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ:", userSession);
    const userId = userSession.data?.user_id;
    console.log("üéØ userId ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API:", userId);
    if (!userId) throw new Error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö user_id");

    const response = await fetch(`${API_URL}/booker/userBookings/${userId}`);
    if (!response.ok) throw new Error("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÑ‡∏î‡πâ");
    const bookings = await response.json();
    console.log("‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö:", bookings);
    const tableBody = document.getElementById("booking-table-body");
    if (!tableBody) {
      console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö element #booking-table-body");
      return;
    }
    tableBody.innerHTML = "";
    if (!Array.isArray(bookings) || bookings.length === 0) {
      console.warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á");
      tableBody.innerHTML = `<tr><td colspan="8" style="text-align: center; color: red;">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á</td></tr>`;
      return;
    }
    bookings.sort(
      (a, b) => new Date(b.Submitted_date) - new Date(a.Submitted_date)
    );
    window.loadedBookingData = bookings;
    bookings.forEach((booking) => {
      const row = document.createElement("tr");
      row.setAttribute("data-id", booking.room_request_id);
      setTimeout(() => {
        document.querySelectorAll(".status").forEach((statusCell) => {
          let statusText = statusCell.textContent.trim();
          if (statusText === "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥") {
            statusCell.style.color = "green";
          } else if (
            statusText === "‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" ||
            statusText === "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á"
          ) {
            statusCell.style.color = "red";
          } else if (
            statusText === "‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥" ||
            statusText === "‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£"
          ) {
            statusCell.style.color = "orange";
          }
        });
      }, 1000);
      //console.log("üìå request_status ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ:", booking.request_status);
      row.innerHTML = `
        <td>${booking.request_type || "-"}</td>
        <td>${booking.room_name || "-"}</td>
        <td>${formatDate(booking.Submitted_date) || "-"}</td>
        <td>${formatDate(booking.Used_date) || "-"}</td>
        <td>${booking.start_time || "-"}</td>
        <td>${booking.end_time || "-"}</td>
        <td class="status">${booking.request_status || "-"}</td>
        <td>
            ${
              booking.request_status === "‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£" ||
              booking.request_status === "‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥"
                ? `<button class="btn cancel-btn btn-sm" onclick="cancelBooking(${booking.room_request_id})">‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å</button>`
                : booking.request_status === "‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥"
                ? `<button class="btn detail-btn btn-sm" onclick="showRejectNote(${booking.room_request_id}, 'reject')">‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</button>`
                : booking.request_status === "‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥"
                ? `<button class="btn detail-btn btn-sm" onclick="showRejectNote(${booking.room_request_id}, 'approve')">‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏</button>`
                : "-"
            }
        </td>
    `;
      tableBody.appendChild(row);
    });
    setupBookingTable(4, 5);
  } catch (error) {
    console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", error);
    document.getElementById(
      "booking-table-body"
    ).innerHTML = `<tr><td colspan="8" style="text-align: center; color: red;">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</td></tr>`;
  }
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ñ‡∏ß‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á
function setupBookingTable(initialVisible, increment) {
  let visibleRows = initialVisible;

  const loadMoreBtn = document.getElementById("load-more-btn-booking");
  const tableRows = document.querySelectorAll("#booking-table-body tr");

  function updateTable() {
    tableRows.forEach((row, index) => {
      row.style.display = index < visibleRows ? "table-row" : "none";
    });

    loadMoreBtn.style.display =
      visibleRows >= tableRows.length ? "none" : "block";
  }

  loadMoreBtn.addEventListener("click", function () {
    visibleRows += increment;
    updateTable();
  });

  updateTable(); // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≠‡∏ö‡πÅ‡∏£‡∏Å
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ñ‡∏ß‡∏Ç‡∏≠‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
function setupReportTable(initialVisible, increment) {
  let visibleRows = initialVisible;

  const loadMoreBtn = document.getElementById("load-more-btn-report");
  const tableRows = document.querySelectorAll("#repair-table-body tr");

  function updateTable() {
    tableRows.forEach((row, index) => {
      row.style.display = index < visibleRows ? "table-row" : "none";
    });

    loadMoreBtn.style.display =
      visibleRows >= tableRows.length ? "none" : "block";
  }

  loadMoreBtn.addEventListener("click", function () {
    visibleRows += increment;
    updateTable();
  });

  updateTable(); // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≠‡∏ö‡πÅ‡∏£‡∏Å
}

document.addEventListener("DOMContentLoaded", function () {
  fetchUserBookingData();
  fetchUserInfo();
  fetchBrokenEquipments();
});
