document.addEventListener("DOMContentLoaded", function () {
  const reportForm = document.getElementById("reportForm");
  const equipmentSelect = document.getElementById("equipment");
  const roomSelect = document.getElementById("room");
  const detailsSelect = document.getElementById("details");
  const imageInput = document.getElementById("image");
  const previewImage = document.getElementById("preview");
  const computerSection = document.getElementById("computer-section");
  const computerSelect = document.getElementById("computer");

  if (
    !reportForm ||
    !equipmentSelect ||
    !roomSelect ||
    !detailsSelect ||
    !imageInput ||
    !previewImage ||
    !computerSection ||
    !computerSelect
  ) {
    console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏ö‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö");
    return;
  }

  // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á API ‡πÉ‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô submit ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°
  reportForm.addEventListener("submit", async function (event) {
    event.preventDefault();

    const equipment = equipmentSelect.value;
    const room = roomSelect.value;
    const details = detailsSelect.value;
    const additionalText =
      document.getElementById("additionalText").value || null;
    const fileInput = imageInput.files[0];

    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤ computer_id (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å)
    let computerId = null;
    if (equipment === "‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå") {
      computerId = document.getElementById("computer").value || null;
      // ‡πÑ‡∏°‡πà‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå
    }

    if (!equipment || !room || !details) {
      alert("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
      return;
    }

    try {
      // 1) getEquipmentId, getRoomId
      const equipmentId = await getEquipmentId(equipment);
      const roomId = await getRoomId(room);
      if (!equipmentId || !roomId) {
        alert("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏´‡∏£‡∏∑‡∏≠‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å");
        return;
      }

      // 2) ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡∏™‡∏ä‡∏±‡∏ô ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
      const sessionResponse = await fetch(`${API_URL}/auth/session`, {
        method: "GET",
        credentials: "include",
      });

      if (!sessionResponse.ok) {
        alert("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà");
        window.location.href = "../../index.html";
        return;
      }

      const sessionData = await sessionResponse.json();
      const userRole = sessionData.role;
      const userId = sessionData.data?.user_id; // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏°‡∏Ñ‡πà‡∏≤‡∏à‡∏£‡∏¥‡∏á

      if (!userId) {
        alert("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ");
        window.location.href = "../../index.html";
        return;
      }

      console.log(`‚úÖ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: ${userRole}, ID: ${userId}`);

      // 3) generateRepairNumber
      const repairNumber = await generateRepairNumber(roomId, equipmentId);
      const parts = repairNumber.split("-");
      const nextNumber = parts[parts.length - 1]; // ‡∏ï‡∏±‡∏ß‡∏ó‡πâ‡∏≤‡∏¢

      // 4) ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÄ‡∏ß‡∏•‡∏≤
      const repairDate = new Date()
        .toISOString()
        .slice(0, 19)
        .replace("T", " ");

      // (‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å path)
      let imagePath = "";

      // **‡∏™‡∏£‡πâ‡∏≤‡∏á formData** ‡πÅ‡∏Ñ‡πà 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
      const formData = new FormData();
      // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå => ‡πÉ‡∏™‡πà‡∏•‡∏á formData

      // ‡πÉ‡∏™‡πà‡∏ü‡∏¥‡∏•‡∏î‡πå sessionUserId, nextNumber
      formData.append("sessionUserId", userId);
      formData.append("nextNumber", nextNumber);

      if (fileInput) {
        formData.append("image", fileInput);
      }

      // 5) ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ fileInput => upload (POST /uploadReportImage)
      if (fileInput) {
        const uploadResponse = await fetch(
          `${API_URL}/booker/uploadReportImage`,
          {
            method: "POST",
            body: formData,
          }
        );

        const uploadResult = await uploadResponse.json();
        if (uploadResponse.ok && uploadResult.filePath) {
          // ‡πÄ‡∏ä‡πà‡∏ô "/storage/equipment_img/64312995_4.jpg"
          imagePath = uploadResult.filePath;
        } else {
          alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û");
          return;
        }
      }

      // 6) ‡∏´‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à => ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á (‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á student_id/teacher_id)
      const reportData = {
        repair_number: repairNumber,
        repair_date: repairDate,
        student_id: userRole === "‡∏ô‡∏¥‡∏™‡∏¥‡∏ï" ? userId : null,
        teacher_id: userRole === "‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå" ? userId : null,
        equipment_id: equipmentId,
        room_id: roomId,
        computer_id: equipment === "‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå" ? computerId : null, // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á computer_id
        damage: details,
        damage_details: additionalText,
        repair_status: "‡∏£‡∏≠‡∏ã‡πà‡∏≠‡∏°",
        image_path: imagePath,
      };

      console.log("üìã ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÑ‡∏õ API:", reportData);

      const response = await fetch(`${API_URL}/booker/reportIssue`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(reportData),
      });

      if (response.ok) {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        let computerText = "";
        if (computerId) {
          computerText = `<p><strong>üñ•Ô∏è ‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå:</strong> ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà ${computerId}</p>`;
        }

        Swal.fire({
          title: "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
          html: `
          <div style="text-align: center;">
            <p><strong>üìç ‡∏´‡πâ‡∏≠‡∏á:</strong> ${room}</p>
            <p><strong>üõ† ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå:</strong> ${equipment}</p>
            ${computerText}
            <p><strong>üìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:</strong> ${details}</p>
            ${
              additionalText
                ? `<p><strong>üìù ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°:</strong> ${additionalText}</p>`
                : ""
            }
            <p style="color: red; font-weight: bold;">* ‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÑ‡∏î‡πâ</p>
          </div>
        `,
          icon: "success",
          confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
        }).then(() => {
          window.location.reload();
        });
      } else {
        alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤");
      }
    } catch (error) {
      console.error("‚ùå Error:", error);
      alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô");
    }
  });

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°" ‡∏ï‡∏≤‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  equipmentSelect.addEventListener("change", function () {
    const equipment = equipmentSelect.value;
    detailsSelect.innerHTML = '<option value="">-- ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å --</option>';

    // ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏ã‡πà‡∏≠‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå
    const computerSection = document.getElementById("computer-section");
    if (equipment === "‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå") {
      computerSection.style.display = "block";
      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
      loadComputersInRoom();
    } else {
      computerSection.style.display = "none";
    }

    const problems = {
      ‡∏™‡∏≤‡∏¢‡πÑ‡∏ü: ["‡∏™‡∏≤‡∏¢‡πÑ‡∏ü‡∏ä‡∏≥‡∏£‡∏∏‡∏î", "‡∏™‡∏≤‡∏¢‡πÑ‡∏ü‡∏Ç‡∏≤‡∏î", "‡∏õ‡∏•‡∏±‡πä‡∏Å‡πÑ‡∏ü‡∏´‡∏•‡∏ß‡∏°"],
      ‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ: ["‡∏Ç‡∏≤‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ‡∏´‡∏±‡∏Å", "‡πÄ‡∏ö‡∏≤‡∏∞‡∏ä‡∏≥‡∏£‡∏∏‡∏î", "‡∏û‡∏ô‡∏±‡∏Å‡∏û‡∏¥‡∏á‡∏´‡∏•‡∏∏‡∏î"],
      ‡πÇ‡∏ï‡πä‡∏∞: ["‡∏Ç‡∏≤‡πÇ‡∏ï‡πä‡∏∞‡∏´‡∏±‡∏Å", "‡∏û‡∏∑‡πâ‡∏ô‡πÇ‡∏ï‡πä‡∏∞‡∏°‡∏µ‡∏£‡∏≠‡∏¢", "‡πÇ‡∏ï‡πä‡∏∞‡πÇ‡∏¢‡∏Å"],
      ‡∏à‡∏≠‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå: ["‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î", "‡∏à‡∏≠‡∏°‡∏µ‡∏£‡∏≠‡∏¢‡πÅ‡∏ï‡∏Å", "‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏ä‡∏±‡∏î"],
      ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏ï‡∏≠‡∏£‡πå: ["‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î", "‡∏†‡∏≤‡∏û‡πÄ‡∏ö‡∏•‡∏≠", "‡∏£‡∏µ‡πÇ‡∏°‡∏ó‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô"],
      ‡∏ó‡∏µ‡∏ß‡∏µ: ["‡∏ó‡∏µ‡∏ß‡∏µ‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î", "‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å", "‡∏à‡∏≠‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏ä‡∏±‡∏î"],
      ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏Å‡∏≤‡∏®: ["‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏¢‡πá‡∏ô", "‡∏°‡∏µ‡∏ô‡πâ‡∏≥‡∏´‡∏¢‡∏î", "‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î"],
      ‡∏ß‡∏¥‡∏ä‡∏ß‡∏•‡πÑ‡∏•‡πÄ‡∏ã‡∏≠‡∏£‡πå: ["‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", "‡πÅ‡∏™‡∏á‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å", "‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏Ç‡∏∂‡πâ‡∏ô"],
      hub: ["‡∏û‡∏≠‡∏£‡πå‡∏ï‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", "‡πÑ‡∏ü‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î", "‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏°‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠"],
      router: ["‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì", "‡πÑ‡∏ü‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î", "‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ä‡πâ‡∏≤"],
      switch: ["‡∏û‡∏≠‡∏£‡πå‡∏ï‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", "‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á", "‡πÑ‡∏ü‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡∏Ç‡∏∂‡πâ‡∏ô"],
      ‡∏û‡∏≠‡∏¢‡πÄ‡∏ï‡∏≠‡∏£‡πå: ["‡πÅ‡∏ö‡∏ï‡πÄ‡∏ï‡∏≠‡∏£‡∏µ‡πà‡∏´‡∏°‡∏î", "‡πÅ‡∏™‡∏á‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å", "‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î‡πÄ‡∏™‡∏µ‡∏¢"],
      ‡πÄ‡∏°‡∏≤‡∏™‡πå: ["‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏•‡∏¥‡∏Å‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô", "‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡πÄ‡∏°‡∏≤‡∏™‡πå‡πÑ‡∏°‡πà‡∏Ç‡∏¢‡∏±‡∏ö", "‡∏™‡∏≤‡∏¢‡πÄ‡∏°‡∏≤‡∏™‡πå‡∏ä‡∏≥‡∏£‡∏∏‡∏î"],
      ‡∏Ñ‡∏µ‡∏¢‡πå‡∏ö‡∏≠‡∏£‡πå‡∏î: ["‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î", "‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏´‡∏•‡∏∏‡∏î", "‡πÅ‡∏™‡∏á‡πÑ‡∏ü‡πÑ‡∏°‡πà‡∏ï‡∏¥‡∏î"],
      ‡∏õ‡∏•‡∏±‡πä‡∏Å‡πÑ‡∏ü: ["‡∏õ‡∏•‡∏±‡πä‡∏Å‡πÑ‡∏ü‡∏ä‡∏≥‡∏£‡∏∏‡∏î", "‡∏™‡∏≤‡∏¢‡πÑ‡∏ü‡∏´‡∏•‡∏ß‡∏°", "‡πÑ‡∏ü‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å"],
      ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÑ‡∏°‡∏Ñ‡πå: ["‡πÑ‡∏°‡∏Ñ‡πå‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏™‡∏µ‡∏¢‡∏á", "‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ç‡∏≤‡∏î‡∏´‡∏≤‡∏¢", "‡πÑ‡∏°‡∏Ñ‡πå‡πÑ‡∏°‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠"],
      ‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå: [
        "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î",
        "‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•",
        "‡∏Ñ‡∏µ‡∏¢‡πå‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏°‡∏≤‡∏™‡πå‡πÑ‡∏°‡πà‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á",
        "‡∏à‡∏≠‡∏ü‡πâ‡∏≤",
      ],
    };

    if (problems[equipment]) {
      problems[equipment].forEach((problem) => {
        const option = document.createElement("option");
        option.value = problem;
        option.textContent = problem;
        detailsSelect.appendChild(option);
      });
    }
  });

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ï‡∏≤‡∏°‡∏´‡πâ‡∏≠‡∏á
  async function loadComputersInRoom() {
    const roomSelect = document.getElementById("room");
    const computerSelect = document.getElementById("computer");
    const selectedRoom = roomSelect.value;

    if (!selectedRoom) {
      console.warn("‚ùå ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á");
      return;
    }

    try {
      // ‡∏î‡∏∂‡∏á room_id ‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≠‡∏á
      const roomIdResponse = await fetch(
        `${API_URL}/booker/getRoomId?name=${encodeURIComponent(selectedRoom)}`
      );

      if (!roomIdResponse.ok) {
        throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á");
      }

      const roomData = await roomIdResponse.json();
      const roomId = roomData.room_id;

      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏±‡πâ‡∏ô
      const computersResponse = await fetch(
        `${API_URL}/booker/getComputersByRoom?room_id=${roomId}`
      );

      if (!computersResponse.ok) {
        throw new Error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ");
      }

      const computersData = await computersResponse.json();

      // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå
      computerSelect.innerHTML = '<option value="">-- ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å --</option>';

      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå
      if (computersData.computers && computersData.computers.length > 0) {
        computersData.computers.forEach((computer) => {
          const option = document.createElement("option");
          option.value = computer.computer_id;
          option.textContent = `‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå #${computer.computer_id}`;
          computerSelect.appendChild(option);
        });
        console.log(
          `‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${computersData.computers.length} ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á`
        );
      } else {
        console.log("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°)");
        const option = document.createElement("option");
        option.value = "";
        option.textContent =
          "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°)";
        computerSelect.appendChild(option);
      }
    } catch (error) {
      console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå:", error);
    }
  }

  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå ‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà
  roomSelect.addEventListener("change", function () {
    if (equipmentSelect.value === "‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå") {
      loadComputersInRoom();
    }
  });

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
  imageInput.addEventListener("change", function (event) {
    const file = event.target.files[0];

    if (file) {
      const reader = new FileReader();
      reader.onload = function (e) {
        previewImage.src = e.target.result;
        previewImage.style.display = "block";
      };
      reader.readAsDataURL(file);
    } else {
      previewImage.style.display = "none";
    }
  });

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ equipment_id ‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå
  async function getEquipmentId(equipmentName) {
    try {
      console.log(`üìå ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ equipment_id ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö: ${equipmentName}`);
      const response = await fetch(
        `${API_URL}/booker/getEquipmentId?name=${encodeURIComponent(
          equipmentName
        )}`
      );
      if (!response.ok) throw new Error("Equipment not found");
      const data = await response.json();
      console.log(`‚úÖ Equipment ID: ${data.equipment_id}`);
      return data.equipment_id;
    } catch (error) {
      console.error("‚ùå Error fetching equipment ID:", error);
      return null;
    }
  }

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ï‡∏≤‡∏°‡∏´‡πâ‡∏≠‡∏á
  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏ï‡∏≤‡∏°‡∏´‡πâ‡∏≠‡∏á
  async function loadComputersInRoom() {
    const roomSelect = document.getElementById("room");
    const computerSelect = document.getElementById("computer");
    const selectedRoom = roomSelect.value;

    if (!selectedRoom) {
      console.warn("‚ùå ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á");
      return;
    }

    try {
      // ‡∏î‡∏∂‡∏á room_id ‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≠‡∏á
      const roomIdResponse = await fetch(
        `${API_URL}/booker/getRoomId?name=${encodeURIComponent(selectedRoom)}`
      );

      if (!roomIdResponse.ok) {
        throw new Error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≠‡∏á");
      }

      const roomData = await roomIdResponse.json();
      const roomId = roomData.room_id;

      // ‡πÉ‡∏ä‡πâ API /getComputersByRoom ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
      const computersResponse = await fetch(
        `${API_URL}/booker/getComputersByRoom?room_id=${roomId}`
      );

      if (!computersResponse.ok) {
        throw new Error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ");
      }

      const computersData = await computersResponse.json();

      // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå
      computerSelect.innerHTML =
        '<option value="">-- ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå --</option>';

      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå
      if (computersData.computers && computersData.computers.length > 0) {
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö computer_id
        computersData.computers.sort((a, b) => a.computer_id - b.computer_id);

        computersData.computers.forEach((computer) => {
          const option = document.createElement("option");
          option.value = computer.computer_id;
          option.textContent = `‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå #${computer.computer_id}`;
          computerSelect.appendChild(option);
        });

        console.log(
          `‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${computersData.computers.length} ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á`
        );
      } else {
        console.log("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°)");
        const option = document.createElement("option");
        option.value = "";
        option.textContent =
          "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°)";
        computerSelect.appendChild(option);
      }
    } catch (error) {
      console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏≠‡∏°‡∏û‡∏¥‡∏ß‡πÄ‡∏ï‡∏≠‡∏£‡πå:", error);
    }
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ room_id ‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≠‡∏á
  async function getRoomId(roomName) {
    try {
      const response = await fetch(
        `${API_URL}/booker/getRoomId?name=${encodeURIComponent(roomName)}`
      );
      if (!response.ok) throw new Error("Room not found");
      const data = await response.json();
      return data.room_id || null;
    } catch (error) {
      console.error("‚ùå Error fetching room ID:", error);
      return null;
    }
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á repair_number ‡πÄ‡∏ä‡πà‡∏ô 414-12-5
  async function generateRepairNumber(roomId, equipmentId) {
    try {
      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API /getLatestRepairNumber
      const response = await fetch(
        `${API_URL}/booker/getLatestRepairNumber?room_id=${roomId}&equipment_id=${equipmentId}`
      );
      const data = await response.json();

      // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ñ‡∏¢‡∏°‡∏µ latest_number ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ +1
      // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡∏°‡∏µ‡∏Å‡πá‡∏à‡∏∞‡πÑ‡∏î‡πâ 0 ‡∏à‡∏≤‡∏Å backend => +1 = 1
      return `${roomId}-${equipmentId}-${(data.latest_number || 0) + 1}`;
    } catch (error) {
      console.error("‚ùå Error fetching latest repair number:", error);
      // fallback
      return `${roomId}-${equipmentId}-1`;
    }
  }
});

// ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
let sessionUserId = null;
let userRole = null; // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ userRole ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ

async function getEquipmentId(equipmentName) {
  try {
    console.log(`üìå ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ equipment_id ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö: ${equipmentName}`);
    const response = await fetch(
      `${API_URL}/booker/getEquipmentId?name=${encodeURIComponent(
        equipmentName
      )}`
    );
    if (!response.ok) throw new Error("Equipment not found");
    const data = await response.json();
    console.log(`‚úÖ Equipment ID: ${data.equipment_id}`);
    return data.equipment_id;
  } catch (error) {
    console.error("‚ùå Error fetching equipment ID:", error);
    return null;
  }
}

async function getRoomId(roomName) {
  try {
    const response = await fetch(
      `${API_URL}/booker/getRoomId?name=${encodeURIComponent(roomName)}`
    );
    if (!response.ok) throw new Error("Room not found");
    const data = await response.json();
    return data.room_id || null;
  } catch (error) {
    console.error("‚ùå Error fetching room ID:", error);
    return null;
  }
}

async function generateRepairNumber(roomId, equipmentId) {
  try {
    const response = await fetch(
      `${API_URL}/booker/getLatestRepairNumber?room_id=${roomId}&equipment_id=${equipmentId}`
    );
    const data = await response.json();
    return `${roomId}-${equipmentId}-${(data.latest_number || 0) + 1}`;
  } catch (error) {
    console.error("‚ùå Error fetching latest repair number:", error);
    return `${roomId}-${equipmentId}-1`;
  }
}
